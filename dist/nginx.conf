# Inspired by https://github.com/cloudfoundry-community/nginx-buildpack
worker_processes 1;
daemon off;

env VCAP_SERVICES;
env REDIS;

error_log <%= ENV["APP_ROOT"] %>/openresty/nginx/logs/error.log debug;
events { worker_connections 1024; }

http
{
    log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
    access_log <%= ENV["APP_ROOT"] %>/openresty/nginx/logs/access.log cloudfoundry;

    # Define the MIME types for files.
    include       mime.types;
    sendfile on;

    include gzip.types;
    etag on;
    tcp_nopush on;
    keepalive_timeout 30;

    default_type  application/octet-stream;

    # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
    # to disable content-type sniffing on some browsers.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
    # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
    # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;


    server
    {
        set     $session_name                       "ges_app";
        set     $session_secret                     gwXpNNS5OTs7Y7tiXC4dyXfJ3XjLi1Xy35oUJDLdqd0=;
        set     $client_id                          login;
        set     $uaa_authorization_header           "Basic bG9naW46QWJjQDQ0YWJj";
        # set     $uaa_authorization_header           "Basic <%= ENV["predix_oauthClientId"] %>";
        set     $user_token                         '';


        listen <%= ENV["PORT"] %>;
        server_name localhost;

        #Open File cache
        open_file_cache          max=2000 inactive=20s;
        open_file_cache_valid    60s;
        open_file_cache_min_uses 5;
        open_file_cache_errors   off;

        root <%= ENV["APP_ROOT"] %>/public/www;

        # CSS and Javascript caching
        location ~* \.(?:css|js|html)$ {
          expires off;
        }
        
        #nginx_status
        location /nginx_status {
            stub_status   on;
            access_log   off;
            allow 127.0.0.1;
            deny all;
        }

        # Don't allow any access to hidden files
        location ~ /\. { deny  all; }

        location ~* \.\w+$ {
            try_files $uri $uri/ 404;
            expires 1d;
        }

        ## Login Routes

        location / {
            # For HTML5 Support, Serve index.html for any other endpoint
            index index.html index.htm Default.htm;
            try_files $uri $uri/ /index.html;

            <% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_directory_index")) %>
            autoindex on;
            <% end %>
        }


    }
}